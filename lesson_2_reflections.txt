What happens when you initialize a repository? Why do you need to do it?

	After doing git init, a new folder named .git gets created. We need to do
	it so that it can start tracking the history of files across commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area stores all the files which we add, and want to add in the next
	commit. Whereas, the working directory is the current directory, and the
	repository contains all the files, and other directories, which may or may
	not be in the staging area.

How can you use the staging area to make sure you have one commit per logical
change?

	To ensure one commit per logical change, we can add only those files to the
	staging area, that are logically connected. Then, we can commit only those
	files, and rest files can be committed in the next commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	We can use branches to try something new which we are not sure of, if it
	will work or not. So, the main code will remain intact in the master branch
	and we can work the changes in the new branch. Also, if we are successful,
	we can also merge the branch with the master branch.

How do the diagrams help you visualize the branch structure?

	Diagrams are great because now we can see where exactly a particular branch
	starts from. Also, we can see the unreachable commits.

